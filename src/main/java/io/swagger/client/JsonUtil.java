/**
 * WellNet API gate for mobile apps
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.List;
import java.util.Date;
import io.swagger.client.model.*;

public class JsonUtil {
  public static GsonBuilder gsonBuilder;

  static {
    gsonBuilder = new GsonBuilder();
    gsonBuilder.serializeNulls();
    gsonBuilder.setDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
    gsonBuilder.registerTypeAdapter(Date.class, new JsonDeserializer<Date>() {
      public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
        return new Date(json.getAsJsonPrimitive().getAsLong());
      }
    });
  }

  public static Gson getGson() {
    return gsonBuilder.create();
  }

  public static String serialize(Object obj){
    return getGson().toJson(obj);
  }

  public static <T> T deserializeToList(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getListTypeForDeserialization(cls));
  }

  public static <T> T deserializeToObject(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getTypeForDeserialization(cls));
  }

  public static Type getListTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("RequestGymsByCoord".equalsIgnoreCase(className)) {
      return new TypeToken<List<RequestGymsByCoord>>(){}.getType();
    }
    
    if ("RequestSignUpModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<RequestSignUpModel>>(){}.getType();
    }
    
    if ("ResponseErrorSignUpModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseErrorSignUpModel>>(){}.getType();
    }
    
    if ("ResponseSignUpModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseSignUpModel>>(){}.getType();
    }
    
    if ("ResponseSignUpModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseSignUpModelData>>(){}.getType();
    }
    
    if ("ReuaestLoginModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReuaestLoginModel>>(){}.getType();
    }
    
    return new TypeToken<List<Object>>(){}.getType();
  }

  public static Type getTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("RequestGymsByCoord".equalsIgnoreCase(className)) {
      return new TypeToken<RequestGymsByCoord>(){}.getType();
    }
    
    if ("RequestSignUpModel".equalsIgnoreCase(className)) {
      return new TypeToken<RequestSignUpModel>(){}.getType();
    }
    
    if ("ResponseErrorSignUpModel".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseErrorSignUpModel>(){}.getType();
    }
    
    if ("ResponseSignUpModel".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseSignUpModel>(){}.getType();
    }
    
    if ("ResponseSignUpModelData".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseSignUpModelData>(){}.getType();
    }
    
    if ("ReuaestLoginModel".equalsIgnoreCase(className)) {
      return new TypeToken<ReuaestLoginModel>(){}.getType();
    }
    
    return new TypeToken<Object>(){}.getType();
  }

};
